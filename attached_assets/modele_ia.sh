#!/bin/bash

set -e  # ArrÃªte le script en cas d'erreur

API_KEY="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"
#API_KEY = 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
# "sk-proj-BbaR0X2Prw794jceGexbsfZx-_-PqmIAJjXkRJgg-Xb0V3qbeBkUPYhxw_M4e0yGdAyZhHJ2-ZT3BlbkFJkpKbnD_CR4Oi7ZghTGIMJIhqb8rzt_xFhYN-NRzNQ-ZYzu8nZQSHrLoSabxZjElC2
#="B4xg4zzx-kI3s-641OGExdXPqP0ch6VEdde-HiFygJ2BhNi16_/

 # API Key pour sÃ©curiser l'IA
IA_DIR="$HOME/modele_ia"  # Dossier de l'IA

echo "ğŸš€ Initialisation du module IA automatique..."

# VÃ©rifier et installer Python
if ! command -v python3 &> /dev/null; then
    echo "ğŸ“Œ Python3 non trouvÃ©. Installation..."
    apt update && apt install python3 -y
else
    echo "âœ… Python3 est installÃ©."
fi

# VÃ©rifier et installer pip
if ! command -v pip3 &> /dev/null; then
    echo "ğŸ“Œ pip non trouvÃ©. Installation..."
    python3 get-pip.py
else
    echo "âœ… pip est installÃ©."
fi

# Installer les dÃ©pendances IA
echo "ğŸ“¦ Installation des dÃ©pendances..."
pip3 install flask openai numpy pandas

# CrÃ©er le dossier du modÃ¨le IA
mkdir -p "$IA_DIR"

# CrÃ©er le fichier de configuration avec l'API Key
echo "ğŸ”‘ Configuration de l'API Key..."
echo "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" > "$IA_DIR/config.env"

# CrÃ©er le serveur IA Flask
cat > "$IA_DIR/ia_server.py" <<EOL
from flask import Flask, request, jsonify
import os

app = Flask(__name__)

# Charger l'API Key
API_KEY = ("API_KEY","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")
#sk-proj-705CZOZrUV_pB4xg4zzx-kI3s-641OGExdXPqPch6VEdde-HiFygJ2BhNi16_cyxuHg23wZXm8T3BlbkFJsrxRLArIhzvblAy_rdXeq_PK7TjxFsLVRT7xtBpa6IrGGDZCl55bOyeDyHWmb1u_cxJB_T

@app.route('/ia', methods=['POST'])
def ia_request():
    user_api_key = request.headers.get("Authorization")
    
    if user_api_key != f"Bearer {API_KEY}":
        return jsonify({"error": "ClÃ© API invalide"}), 403

    data = request.json.get("input", "Aucune donnÃ©e reÃ§ue")
    response = f"IA a analysÃ© : {data}"  # Simulation de rÃ©ponse IA

    return jsonify({"response": response})

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=5000)
EOL

# Ajouter un alias pour exÃ©cuter le modÃ¨le IA avec une commande personnalisÃ©e
echo "alias modele_ia.root@cmd$='python3 $IA_DIR/ia_server.py'" >> ~/.bashrc
source ~/.bashrc

echo "âœ… Installation et configuration terminÃ©es !"
echo "ğŸ”¥ Utilisez 'modele_ia.root@cmd$' pour dÃ©marrer l'IA."
